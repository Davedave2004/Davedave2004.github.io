{"version":3,"sources":["img/logo.png","components/Header.tsx","components/CustomInput.tsx","components/EdittableList.tsx","components/ToDoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","logoNav","src","logo","label","href","useState","title","className","alt","map","item","CustomInput","input","setInput","regExp","setRegExp","refContainer","useRef","useEffect","availableRegexTypes","number","current","textContent","toString","regexType","safeProps","ref","type","value","onChange","e","preventDefault","target","test","EdittableList","items","content","onClick","handleDelete","id","ToDoList","newItem","setNewItem","setItems","placeholder","autoComplete","tabIndex","prevItems","Date","handleUpdate","newContent","itemIndex","findIndex","filter","App","customRegex","setCustomRegex","RegExp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e7230c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e850297e.png\";","import React, { useState } from \"react\";\r\nimport logo from '../img/logo.png';\r\nimport '../styles/Header.scss';\r\n\r\ntype navItem = {\r\n    label: string;\r\n    href: string;\r\n}\r\n\r\ninterface headerProps {\r\n    logoNav?: {\r\n        logoSrc: string;\r\n        label: string;\r\n        href: string;\r\n    }\r\n    navItems?: navItem[];\r\n}\r\n\r\nexport function Header(props: headerProps) {\r\n    const logoNav = {\r\n        src: logo,\r\n        label: 'MyPage',\r\n        href: '#top'\r\n    }\r\n\r\n    const navItems: navItem[] = [\r\n        {\r\n            label: 'Top',\r\n            href: '#top'\r\n        },\r\n        {\r\n            label: 'Components',\r\n            href: '#components'\r\n        },\r\n        {\r\n            label: 'To Do',\r\n            href: '#todo'\r\n        }\r\n    ];\r\n\r\n    const [title] = useState(logoNav.label);\r\n\r\n    return (\r\n        <header>\r\n            <a className=\"logo-link\" href={logoNav.href}>\r\n                <img src={logoNav.src} alt=\"header logo\" />\r\n            </a>\r\n            <label>{title}</label>\r\n            <nav>\r\n                <ul>\r\n                {navItems.map((item) => (\r\n                    <li><a className=\"navItem\" href={item.href}>{item.label}</a></li>\r\n                ))}\r\n                </ul>\r\n            </nav>\r\n      </header>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\n\r\ninterface customInputProps extends React.HTMLProps<HTMLInputElement> {\r\n    regexType?: string;\r\n    regExp?: RegExp;\r\n}\r\n\r\nexport function CustomInput(props: customInputProps) {\r\n    const [input, setInput] = useState('');\r\n    const [regExp, setRegExp] = useState(/.?/);\r\n    const refContainer = useRef<HTMLHeadingElement>(null);\r\n\r\n    // Apply regex value if available from props\r\n    useEffect(() => {\r\n        const availableRegexTypes = {\r\n            number: /^\\d*$/,\r\n        };\r\n        \r\n        type RegexName = keyof typeof availableRegexTypes;\r\n\r\n        if (props.regExp) {\r\n            setRegExp(props.regExp);\r\n            if (refContainer.current) refContainer.current.textContent = `I am using your regex ${props.regExp.toString()}` ;\r\n        } else if(props.regexType && props.regexType in availableRegexTypes) {\r\n            setRegExp(availableRegexTypes[props.regexType as RegexName]);\r\n            if (refContainer.current) refContainer.current.textContent = `I am using type ${props.regexType}`;\r\n        }\r\n    }, [props.regexType, props.regExp])\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const {value} = e.target;\r\n        \r\n        if (regExp.test(value)) \r\n        {\r\n            setInput(value);\r\n        }\r\n    }\r\n\r\n    // Do not set attributes that might produce conflict\r\n    const {regexType, regExp : customRegExp, ...safeProps} = props;\r\n    return (\r\n        <div>\r\n            <h1 ref={refContainer}>I am currently using the default</h1>\r\n            <input \r\n                type=\"text\" \r\n                value={input} \r\n                onChange={handleChange}\r\n                {...safeProps}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\ntype listItem = {\r\n    content: string;\r\n    id: string;\r\n}\r\n\r\ninterface listProps {\r\n    items: listItem[];\r\n    handleUpdate?: (id: string, newContent: string) => void;\r\n    handleDelete: (id: string) => void;\r\n}\r\n\r\nexport function EdittableList(props: listProps) {\r\n\r\n    return (\r\n        <ul className=\"edit-list\">\r\n            {props.items.map((item) => (\r\n                <li key={item.id}>\r\n                    {item.content}\r\n                    <button \r\n                        onClick={() => {props.handleDelete(item.id)}} \r\n                        className=\"btn btn--delete\"\r\n                        aria-label=\"Delete list item\"\r\n                    >\r\n                        X\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { EdittableList } from './EdittableList';\r\n\r\ntype listItem = {\r\n    content: string;\r\n    id: string;\r\n}\r\n\r\nexport function ToDoList() {\r\n    const [newItem, setNewItem] = useState('');\r\n    const [items, setItems] = useState<listItem[]>([]);\r\n\r\n    const addItem = () => {\r\n        setItems((prevItems: listItem[]) => {\r\n            return [\r\n                ...prevItems,\r\n                {\r\n                    content: newItem,\r\n                    id: new Date().toString()\r\n                }\r\n            ];\r\n        })\r\n        setNewItem('');\r\n    }\r\n\r\n    const updateItem = (id: string, newContent: string) => {\r\n        const itemIndex = items.findIndex((item) => id === item.id);\r\n        setItems((prevItems: listItem[]) => {\r\n            prevItems[itemIndex].content = newContent;\r\n            return prevItems;\r\n        })       \r\n    }\r\n\r\n    const deleteItem = (id: string) => {\r\n        setItems((prevItems: listItem[]) => {\r\n            return prevItems.filter((item) => item.id !== id)\r\n        })  \r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewItem(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <section className=\"input-container\">\r\n                <form>\r\n                    <input value={newItem} type=\"text\" placeholder=\"what to do?\" onChange={handleChange} autoComplete=\"off\" tabIndex={0}/>\r\n                    <button onClick={addItem} className=\"btn btn--confirm\" title=\"Add new item\" aria-label=\"Add a new item to the list\" tabIndex={0}>+</button>\r\n                </form>\r\n                \r\n            </section>\r\n            <section className=\"list-container\">\r\n                <EdittableList items={items} handleUpdate={updateItem} handleDelete={deleteItem}/>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React, { useState, useRef } from 'react';\nimport './App.scss';\nimport { Header } from './components/Header';\nimport { CustomInput } from './components/CustomInput';\nimport { ToDoList } from './components/ToDoList';\n\nfunction App() {\n  const [customRegex, setCustomRegex] = useState(/.?/);\n  const refContainer = useRef<HTMLHeadingElement>(null);\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const {value} = e.target;\n    try {\n        new RegExp(value);\n        setCustomRegex(new RegExp(value));\n        if (refContainer.current) refContainer.current.textContent = '';\n    } catch(e) {\n        if (refContainer.current) refContainer.current.textContent = `That's not a valid regex!` ;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"top\"></div>\n      <Header />\n      <section>\n        <h1>About this page</h1>\n        <article>\n          <p>This page is just me trying to make something out of React / TypeScript.</p>\n          <p>Currently, I tried making different components like this header, a todo list, and some random elements like a regex-controlled input</p>\n        </article>\n      </section>\n      <section id=\"components\">\n        <h1>Components</h1>\n        <CustomInput regexType='number' />\n        <CustomInput regExp={/^\\d{0,11}$/} />\n        <h1>Set your custom regex here:</h1><input onChange={handleChange} />\n        <CustomInput regExp={customRegex} />\n        <h2 ref={refContainer}>regex input status will appear here</h2>\n      </section>\n      <section id=\"todo\" className=\"last-section\">\n        <h1>React To-Do List</h1>\n        <ToDoList />\n      </section>\n      <footer>\n        This is my footer\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}